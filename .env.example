# Here's some environment variables you can use to configure the application above and beyond
# providing command line options. Most useful because you can permanently configure options
# you tend to reuse (e.g. '--maximize-width')
#
# If you place a filed called `.env` in pdfalyzer's project dir then environment variables specified
# in that .env file will be added to the environment each time pdfalyzer is invoked. See the `dotenv`
# package for more details.
#
# Easiest way to do this is usually to just copy this example .env file over to an actual file called
# .env and then edit it.


# Size threshold (in bytes) over which pdfalyzer will NOT make attempts to decode or analyze that chunk of data.
# Basically the threshold at which we leave a regex match alone.  May
# feel counterintuitive but larger chunks of random binary are harder to examine, slower to decode by force, and
# (in my experience) less likely to be maningful. Consider it - two frontslash characters 20,000 lines apart
# are more likely to be random than those same frontslashes when placed nearer to each other and
# in the vicinity of lot of computerized sigils of internet power like `.', `+bacd*?`,. and other regexes.*
# Keeping this number low will do more to affect the speed of the app than ay anything else you
# can easily configure..
#    PDFALYZER_MAX_DECODABLE_CHUNK_SIZE

# Expand the width of the output to the fit the display window (same as the --maximize-width options)
#    PDFALYZER_MAXIMIZE_WIDTH=True

# Suppress all PDF binary regex matchingsuppressed (this is the slowest task)
#    PDFALYZER_SUPPRESS_DECODE_OF_QUOTED_STRING = False

# Suppress the display of the table showing the the encoding assessments given by `chardet.detect()`
# about a particular chunk of binary data. (The most important data in the chardet confidence table is
# redunandant anyways. Only the low likelihood encodings are hidden from the usef)
#    PDFALYZER_SUPPRESS_CHARDET_TABLE

# Configure how many bytes before and after any binary data should be included in scans and visualizations
#    PDFAlYZER_SURROUNDING_BYTES=64


#PDFALYZER_LOG_TIMESTAMPS
